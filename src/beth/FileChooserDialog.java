/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package beth;

import beth.exceptions.NewickFormatException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;

/**
 *
 * @author Ben Haladik
 */
public class FileChooserDialog extends javax.swing.JDialog {
    
    RootedTree treeFromFile;
    NewickToTree nwk2tree;
    
    /**
     * Creates new form fileChooserDialog
     */
    public FileChooserDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        importFileChooser = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        importFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(importFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(importFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void importFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFileChooserActionPerformed
        File inputFile = importFileChooser.getSelectedFile();
        BufferedReader in;
        try {
            in = new BufferedReader(new InputStreamReader(new FileInputStream(inputFile.toString()), "UTF-8"));
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(FileChooserDialog.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Unsupported Encoding", "Invalid encoding", ERROR_MESSAGE);
            return;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FileChooserDialog.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "This file does not seem to exist", "Inexistent file", ERROR_MESSAGE);
            return;
        }
        StringBuilder builder = new StringBuilder();
        try {
            while (true) {
                String line = in.readLine();
                if (line == null)
                    break;
                    
                
                builder.append(line);
                
                
                }
        } catch (IOException ex) {
            Logger.getLogger(FileChooserDialog.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(FileChooserDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
        
        
        String filecontent = builder.toString();
        try {
            this.nwk2tree = new NewickToTree(filecontent);
            
        } catch (NewickFormatException ex) {
            JOptionPane.showMessageDialog(null, "The Newick String seems to be invalid. Incorrect Newick Strings cannot be processed. Please choose a valid Newick String as input.");
        }
        this.treeFromFile = this.nwk2tree.getTree();
        
        
        
        //System.out.println(filecontent);
    }//GEN-LAST:event_importFileChooserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileChooserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileChooserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileChooserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileChooserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FileChooserDialog dialog = new FileChooserDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    /**
     * Return the tree which was created from the newick string.
     * @return 
     */
    public RootedTree<String> getTree() {
        
        if (this.treeFromFile != null) {
            
            return this.treeFromFile;
        } else {
            System.err.println("No tree selected. Returning null.");
            return null;
        }
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser importFileChooser;
    // End of variables declaration//GEN-END:variables
}
